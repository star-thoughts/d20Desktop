<Application x:Class="Fiction.GameScreen.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Fiction.GameScreen"
             xmlns:controls="clr-namespace:Fiction.GameScreen.Controls"
             Startup="Application_Startup">
    <Application.Resources>
        <Thickness x:Key="WindowMargin">4</Thickness>
        <SolidColorBrush x:Key="BackgroundBrush"
                         Color="Black" />
        <SolidColorBrush x:Key="ButtonBorderBrush"
                         Color="DarkGray" />
        <SolidColorBrush x:Key="ButtonText"
                         Color="LightGreen" />
        <SolidColorBrush x:Key="DisabledButtonBorderBrush"
                         Color="Gray" />
        <SolidColorBrush x:Key="DisabledButtonText"
                         Color="DarkGreen" />
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}"
                         Color="White" />
        <SolidColorBrush x:Key="DisabledBackground"
                         Color="DarkSlateGray" />


        <!--  Border Default Style  -->
        <Style TargetType="{x:Type Border}">
            <!--  Make the border always match the font color  -->
            <Setter Property="BorderBrush"
                    Value="{DynamicResource {x:Static controls:ResourceKeys.TextFontColor}}" />
        </Style>
        <!--  TextBlock Default Style  -->
        <Style TargetType="{x:Type TextBlock}"
               BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="TextElement.FontSize"
                    Value="{DynamicResource {x:Static controls:ResourceKeys.TextFontSize}}" />
            <!--<Setter Property="Foreground"
                    Value="{DynamicResource {x:Static controls:ResourceKeys.TextFontColor}}" />-->
            <Setter Property="IsHitTestVisible"
                    Value="False" />
        </Style>

        <Style TargetType="{x:Type Run}">
            <Setter Property="TextElement.FontSize"
                    Value="{DynamicResource {x:Static controls:ResourceKeys.TextFontSize}}" />
        </Style>

        <!--  ListBox Default Style  -->
        <Style TargetType="{x:Type ListBox}"
               BasedOn="{StaticResource {x:Type ListBox}}">
            <Setter Property="Background"
                    Value="{DynamicResource BackgroundBrush}" />
            <Setter Property="ItemContainerStyle"
                    Value="{StaticResource {x:Static controls:ResourceKeys.ListBoxItemStyle}}" />
            <Setter Property="ScrollViewer.PanningMode"
                    Value="VerticalOnly" />
        </Style>

        <Style TargetType="{x:Type ListBoxItem}"
               BasedOn="{StaticResource {x:Static controls:ResourceKeys.ListBoxItemStyle}}" />

        <!--  MenuItem Default Style  -->
        <Style TargetType="{x:Type MenuItem}"
               BasedOn="{StaticResource {x:Type MenuItem}}"
               x:Key="MenuItemBase">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static local:App.Current}, Path=AppSettings.IsTouchEnabled}"
                             Value="True">
                    <Setter Property="Padding"
                            Value="4, 4" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type MenuItem}"
               BasedOn="{StaticResource MenuItemBase}" />

        <!--  Default Style for CheckBox  -->
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static local:App.Current}, Path=AppSettings.IsTouchEnabled}"
                             Value="True">
                    <Setter Property="Padding"
                            Value="0, 4" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--  Button Default Style  -->
        <Style TargetType="{x:Type Button}"
               BasedOn="{StaticResource {x:Type Button}}"
               x:Key="ButtonBase">
            <Setter Property="MinWidth"
                    Value="80" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ButtonBorderBrush}" />
            <Setter Property="TextElement.Foreground"
                    Value="{DynamicResource ButtonText}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="ButtonBorder"
                                BorderThickness="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="4"
                                Background="Transparent">
                            <ContentPresenter x:Name="ButtonContent"
                                              HorizontalAlignment="Center"
                                              Content="{TemplateBinding Content}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static local:App.Current}, Path=AppSettings.IsTouchEnabled}"
                                         Value="True">
                                <Setter TargetName="ButtonContent"
                                        Property="Margin"
                                        Value="4, 4" />
                            </DataTrigger>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter Property="BorderBrush"
                                        TargetName="ButtonBorder"
                                        Value="{DynamicResource DisabledButtonBorderBrush}" />
                                <Setter Property="TextElement.Foreground"
                                        TargetName="ButtonContent"
                                        Value="{DynamicResource DisabledButtonText}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}"
               BasedOn="{StaticResource ButtonBase}" />

        <!--  TextBox Default Style  -->
        <Style TargetType="{x:Type TextBox}"
               BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="TextElement.Foreground"
                    Value="Black" />
            <Setter Property="FontSize"
                    Value="{DynamicResource {x:Static controls:ResourceKeys.TextFontSize}}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static local:App.Current}, Path=AppSettings.IsTouchEnabled}"
                             Value="True">
                    <Setter Property="Padding"
                            Value="4, 4" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--  Style for ToggleButton for ComboBox-->
        <ControlTemplate x:Key="ComboBoxToggleButton"
                         TargetType="ToggleButton">
            <Grid Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border"
                        Grid.ColumnSpan="2"
                        CornerRadius="2"
                        BorderThickness="1" />
                <Border Grid.Column="0"
                        CornerRadius="2,0,0,2"
                        Margin="1"
                        Background="{StaticResource BackgroundBrush}"
                        BorderThickness="0,0,1,0" />
                <Path x:Name="Arrow"
                      Grid.Column="1"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Stroke="{DynamicResource {x:Static controls:ResourceKeys.TextFontColor}}"
                      Data="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox"
                         TargetType="TextBox">
            <Border x:Name="PART_ContentHost"
                    Focusable="False"
                    Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <!--  ComboBox Default Style  -->
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="Background"
                    Value="{StaticResource BackgroundBrush}" />
            <Setter Property="TextElement.Foreground"
                    Value="{StaticResource {x:Static controls:ResourceKeys.TextFontColor}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ToggleButton Name="ToggleButton"
                                          Template="{StaticResource ComboBoxToggleButton}"
                                          Grid.Column="0"
                                          Grid.ColumnSpan="2"
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                            </ToggleButton>
                            <Border BorderThickness="1"
                                    BorderBrush="{DynamicResource {x:Static controls:ResourceKeys.TextFontColor}}">
                                <Grid>
                                    <ContentPresenter Name="ContentSite"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      IsHitTestVisible="False"
                                                      Margin="3,3,23,3"
                                                      VerticalAlignment="Stretch"
                                                      HorizontalAlignment="Left" />
                                    <TextBox x:Name="PART_EditableTextBox"
                                             Style="{x:Null}"
                                             Template="{StaticResource ComboBoxTextBox}"
                                             HorizontalAlignment="Stretch"
                                             VerticalAlignment="Stretch"
                                             Margin="3,3,23,3"
                                             Focusable="True"
                                             Visibility="Hidden"
                                             TextElement.Foreground="Black"
                                             IsReadOnly="{TemplateBinding IsReadOnly}" />
                                </Grid>
                            </Border>
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      TextElement.Foreground="{StaticResource {x:Static controls:ResourceKeys.TextFontColor}}">
                                    <Border x:Name="DropDownBorder"
                                            Background="{StaticResource BackgroundBrush}"
                                            BorderThickness="1" />
                                    <ScrollViewer Margin="4,6,4,6"
                                                  SnapsToDevicePixels="True"
                                                  CanContentScroll="False">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                                        VirtualizingPanel.IsVirtualizing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(VirtualizingPanel.IsVirtualizing)}"
                                                        VirtualizingPanel.IsVirtualizingWhenGrouping="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(VirtualizingPanel.IsVirtualizingWhenGrouping)}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEditable"
                                     Value="true">
                                <Setter Property="IsTabStop"
                                        Value="false" />
                                <Setter TargetName="PART_EditableTextBox"
                                        Property="Visibility"
                                        Value="Visible" />
                                <Setter TargetName="ContentSite"
                                        Property="Visibility"
                                        Value="Hidden" />
                                <Setter TargetName="ToggleButton"
                                        Property="Grid.Column"
                                        Value="1" />
                                <Setter TargetName="ToggleButton"
                                        Property="Grid.ColumnSpan"
                                        Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="Opacity"
                            Value="0.5" />
                    <Setter Property="Background"
                            Value="{StaticResource DisabledBackground}" />
                </Trigger>
                <DataTrigger Binding="{Binding Source={x:Static local:App.Current}, Path=AppSettings.IsTouchEnabled}"
                             Value="True">
                    <Setter Property="Padding"
                            Value="4, 4" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--  ToolTip default style  -->
        <Style TargetType="{x:Type ToolTip}"
               BasedOn="{StaticResource {x:Type ToolTip}}">
            <Setter Property="DataContext"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget.DataContext}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background"
                    Value="Black" />
        </Style>

        <!--  TabItem default style  -->
        <Style TargetType="{x:Type TabItem}"
               BasedOn="{StaticResource {x:Type TabItem}}">
            <Setter Property="MinWidth"
                    Value="80" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="Tab"
                              Background="DarkSlateGray"
                              TextElement.Foreground="White">
                            <ContentPresenter ContentSource="Header"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              Margin="4" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="DarkBlue"
                                        TargetName="Tab" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="DarkBlue"
                                        TargetName="Tab" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  TabControl default style  -->
        <Style TargetType="{x:Type TabControl}"
               BasedOn="{StaticResource {x:Type TabControl}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="HeaderPanel"
                                      Grid.Row="0"
                                      Panel.ZIndex="1"
                                      IsItemsHost="True"
                                      KeyboardNavigation.TabIndex="1"
                                      Background="Transparent" />
                            <Border x:Name="Border"
                                    Grid.Row="1"
                                    BorderThickness="0, 2, 0, 0"
                                    CornerRadius="2"
                                    KeyboardNavigation.TabNavigation="Local"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2"
                                    BorderBrush="{StaticResource ResourceKey={x:Static controls:ResourceKeys.FadeToRightBrush}}">

                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  Margin="4"
                                                  ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  Menu Templates  -->
        <Color x:Key="MenuHighlightColorLight">Gray</Color>
        <Color x:Key="MenuHighlightColorDark">Black</Color>

        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                         TargetType="{x:Type MenuItem}">
            <Border x:Name="Border"
                    Background="Transparent">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ContentPresenter Margin="6,3,6,3"
                                      ContentSource="Header"
                                      TextElement.Foreground="White"
                                      RecognizesAccessKey="True" />
                    <Border Grid.Row="1"
                            BorderThickness="1"
                            BorderBrush="LightBlue"
                            CornerRadius="8"
                            Background="Black" />
                    <Popup x:Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsSubmenuOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Fade">
                        <Border x:Name="SubmenuBorder"
                                SnapsToDevicePixels="True"
                                BorderThickness="1"
                                Background="Black">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="White" />
                            </Border.BorderBrush>
                            <ScrollViewer CanContentScroll="True"
                                          VerticalScrollBarVisibility="Auto">
                                <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation"
                         Value="true">
                    <Setter TargetName="Popup"
                            Property="PopupAnimation"
                            Value="None" />
                </Trigger>
                <Trigger Property="IsHighlighted"
                         Value="true">
                    <Setter TargetName="Border"
                            Property="BorderBrush"
                            Value="Transparent" />
                    <Setter Property="Background"
                            TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0"
                                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{StaticResource MenuHighlightColorDark}" />
                                        <GradientStop Color="{StaticResource MenuHighlightColorLight}"
                                                      Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger SourceName="Popup"
                         Property="AllowsTransparency"
                         Value="True">
                    <Setter TargetName="SubmenuBorder"
                            Property="CornerRadius"
                            Value="0,0,4,4" />
                    <Setter TargetName="SubmenuBorder"
                            Property="Padding"
                            Value="0,0,0,3" />
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="DarkGray" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                         TargetType="{x:Type MenuItem}">
            <Border x:Name="Border"
                    Background="Black"
                    BorderThickness="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                                          SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"
                                          SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                                      Margin="6,0,6,0"
                                      VerticalAlignment="Center"
                                      ContentSource="Icon" />
                    <Border x:Name="Check"
                            Width="13"
                            Height="13"
                            Visibility="Hidden"
                            Margin="6,0,6,0"
                            BorderThickness="1">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0"
                                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{StaticResource MenuHighlightColorLight}"
                                                      Offset="0.0" />
                                        <GradientStop Color="{StaticResource MenuHighlightColorDark}"
                                                      Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{StaticResource MenuHighlightColorDark}" />
                                        <GradientStop Color="{StaticResource MenuHighlightColorLight}"
                                                      Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Path x:Name="CheckMark"
                              Width="7"
                              Height="7"
                              Visibility="Hidden"
                              SnapsToDevicePixels="False"
                              StrokeThickness="2"
                              Data="M 0 0 L 7 7 M 0 7 L 7 0">
                            <Path.Stroke>
                                <SolidColorBrush Color="White" />
                            </Path.Stroke>
                        </Path>
                    </Border>
                    <ContentPresenter x:Name="HeaderHost"
                                      Grid.Column="1"
                                      ContentSource="Header"
                                      RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText"
                               Grid.Column="2"
                               Text="{TemplateBinding InputGestureText}"
                               Margin="5,2,0,2"
                               DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="ButtonBase.Command"
                         Value="{x:Null}" />
                <Trigger Property="Icon"
                         Value="{x:Null}">
                    <Setter TargetName="Icon"
                            Property="Visibility"
                            Value="Hidden" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="true">
                    <Setter TargetName="CheckMark"
                            Property="Visibility"
                            Value="Visible" />
                </Trigger>
                <Trigger Property="IsCheckable"
                         Value="true">
                    <Setter TargetName="Check"
                            Property="Visibility"
                            Value="Visible" />
                    <Setter TargetName="Icon"
                            Property="Visibility"
                            Value="Hidden" />
                </Trigger>
                <Trigger Property="IsHighlighted"
                         Value="true">
                    <Setter Property="Background"
                            TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1"
                                                 StartPoint="0.5,0">
                                <GradientStop Color="{StaticResource MenuHighlightColorDark}"
                                              Offset="0" />
                                <GradientStop Color="{StaticResource MenuHighlightColorLight}"
                                              Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush"
                            TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1"
                                                 StartPoint="0.5,0">
                                <GradientStop Color="Gray"
                                              Offset="0" />
                                <GradientStop Color="Black"
                                              Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="false">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="DarkGray" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="true">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="White" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                         TargetType="{x:Type MenuItem}">
            <Border x:Name="Border"
                    Background="Black"
                    BorderThickness="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                                          SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"
                                          SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                                      Margin="6,0,6,0"
                                      VerticalAlignment="Center"
                                      ContentSource="Icon" />
                    <Border x:Name="Check"
                            Width="13"
                            Height="13"
                            Visibility="Hidden"
                            Margin="6,0,6,0"
                            BorderThickness="1">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0"
                                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{StaticResource MenuHighlightColorLight}"
                                                      Offset="0.0" />
                                        <GradientStop Color="{StaticResource MenuHighlightColorDark}"
                                                      Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{StaticResource MenuHighlightColorDark}" />
                                        <GradientStop Color="{StaticResource MenuHighlightColorLight}"
                                                      Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Path x:Name="CheckMark"
                              Width="7"
                              Height="7"
                              Visibility="Hidden"
                              SnapsToDevicePixels="False"
                              StrokeThickness="2"
                              Data="M 0 0 L 7 7 M 0 7 L 7 0">
                            <Path.Stroke>
                                <SolidColorBrush Color="White" />
                            </Path.Stroke>
                        </Path>
                    </Border>
                    <ContentPresenter x:Name="HeaderHost"
                                      Grid.Column="1"
                                      ContentSource="Header"
                                      RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText"
                               Grid.Column="2"
                               Text="{TemplateBinding InputGestureText}"
                               Margin="5,2,2,2"
                               DockPanel.Dock="Right" />
                    <Path Grid.Column="3"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 0 7 L 4 3.5 Z">
                        <Path.Fill>
                            <SolidColorBrush Color="White" />
                        </Path.Fill>
                    </Path>
                    <Popup x:Name="Popup"
                           Placement="Right"
                           HorizontalOffset="-4"
                           IsOpen="{TemplateBinding IsSubmenuOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Fade">
                        <Border x:Name="SubmenuBorder"
                                SnapsToDevicePixels="True"
                                Background="Black"
                                BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="White" />
                            </Border.BorderBrush>
                            <ScrollViewer CanContentScroll="True"
                                          VerticalScrollBarVisibility="Auto">
                                <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon"
                         Value="{x:Null}">
                    <Setter TargetName="Icon"
                            Property="Visibility"
                            Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsHighlighted"
                         Value="true">
                    <Setter Property="Background"
                            TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1"
                                                 StartPoint="0.5,0">
                                <GradientStop Color="{StaticResource MenuHighlightColorDark}"
                                              Offset="0" />
                                <GradientStop Color="{StaticResource MenuHighlightColorLight}"
                                              Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush"
                            TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1"
                                                 StartPoint="0.5,0">
                                <GradientStop Color="Gray"
                                              Offset="0" />
                                <GradientStop Color="Black"
                                              Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger SourceName="Popup"
                         Property="AllowsTransparency"
                         Value="True">
                    <Setter TargetName="SubmenuBorder"
                            Property="CornerRadius"
                            Value="4" />
                    <Setter TargetName="SubmenuBorder"
                            Property="Padding"
                            Value="0,3,0,3" />
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="false">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="Gray" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="true">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="White" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>
</Application>
